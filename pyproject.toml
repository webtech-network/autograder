[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "autograder"
version = "0.1.0"
description = "A flexible and extensible automated grading system for programming assignments"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
keywords = ["education", "grading", "autograder", "teaching", "github-classroom"]
authors = [
    {name = "Autograder Team", email = "maintainers@autograder.dev"}
]
maintainers = [
    {name = "Autograder Team", email = "maintainers@autograder.dev"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Education",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Education",
    "Topic :: Software Development :: Testing",
    "Operating System :: OS Independent",
]

dependencies = [
    "pytest~=8.4.1",
    "argparse~=1.4.0",
    "bs4~=0.0.2",
    "aiohttp==3.10.11",
    "PyGithub~=2.6.1",
    "openai==1.93.0",
    "requests~=2.32.4",
    "beautifulsoup4~=4.13.4",
    "python-dotenv~=1.1.1",
    "upstash-redis==1.4.0",
    "fastapi~=0.115.0",
    "uvicorn[standard]~=0.32.0",
    "python-multipart",
]

[project.optional-dependencies]
dev = [
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "pytest-asyncio>=0.23.0",
    "black>=24.0.0",
    "flake8>=7.0.0",
    "mypy>=1.8.0",
    "isort>=5.13.0",
    "pre-commit>=3.6.0",
    "ipython>=8.20.0",
]
docs = [
    "sphinx>=7.2.0",
    "sphinx-rtd-theme>=2.0.0",
    "myst-parser>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/YOUR_ORG/autograder"
Documentation = "https://autograder.readthedocs.io"
Repository = "https://github.com/YOUR_ORG/autograder"
"Bug Tracker" = "https://github.com/YOUR_ORG/autograder/issues"
Changelog = "https://github.com/YOUR_ORG/autograder/blob/main/CHANGELOG.md"

[project.scripts]
autograder = "autograder.cli:main"

[tool.setuptools]
package-dir = {"" = "."}
packages = ["autograder", "connectors"]

[tool.setuptools.package-data]
autograder = ["py.typed", "**/*.json"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_gitignore = true

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--showlocals",
    "--cov=autograder",
    "--cov=connectors",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "api: marks tests for API adapter",
    "github: marks tests for GitHub adapter",
]
filterwarnings = [
    "error",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

# Coverage configuration
[tool.coverage.run]
branch = true
source = ["autograder", "connectors"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]

# mypy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

# Bandit security configuration
[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101"]  # Skip assert_used check in tests

# Pylint configuration
[tool.pylint.messages_control]
disable = [
    "C0111",  # missing-docstring
    "C0103",  # invalid-name
    "R0903",  # too-few-public-methods
]

[tool.pylint.format]
max-line-length = 88
