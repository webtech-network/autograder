name: "HTML/CSS/JS Autograder"
author: "Webtech Network"
description: "An autograding tool for GitHub Classroom that evaluates students' HTML, CSS, and JavaScript projects."

# Defines the inputs that the action can receive.
# These are mapped to the arguments in the `runs` section below.
inputs:
  github-token:
    description: >
      GitHub token for API access. Defaults to the token provided by GitHub Actions.
    required: false
    default: ${{ github.token }}
  grading_preset:
    description: 'Defines the set of grading rules and point values to apply. To create your own grading preset, use "custom".'
    required: true
  feedback-type:
    description: 'The type or style of feedback to provide to the student (e.g., summary, detailed).'
    required: true
  openai_key:
    description: 'Optional OpenAI API key for generating AI-assisted feedback.'
    required: false
  redis_url:
    description: 'Optional URL for a Redis instance for caching.'
    required: false
  redis_token:
    description: 'Optional authentication token for the Redis instance.'
    required: false
  app_token:
    description: 'The application token for the autograder service.'
    required: false
  test_framework:
    description: 'Specifies the test framework to use for grading (e.g., jest, cypress).'
    required: false

# Defines the output variable of the action.
outputs:
  result:
    description: "Base64-encoded JSON containing the results of the grading."

# Configures how the action is executed.
runs:
  using: docker
  image: "Dockerfile"
  # Use 'env' to pass named variables to the container
  env:
    GITHUB_TOKEN: ${{ inputs.github-token }}
    APP_TOKEN: ${{ inputs.app_token }}
    TEST_FRAMEWORK: ${{ inputs.test_framework }}
    GRADING_PRESET: ${{ inputs.grading_preset }}
    FEEDBACK_TYPE: ${{ inputs.feedback-type }}
    OPENAI_KEY: ${{ inputs.openai_key }}
    REDIS_URL: ${{ inputs.redis_url }}
    REDIS_TOKEN: ${{ inputs.redis_token }}