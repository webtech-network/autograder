{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Autograder API Request Schema",
  "description": "JSON Schema for validating Autograder API requests",
  "type": "object",
  "properties": {
    "template_preset": {
      "type": "string",
      "enum": ["web dev", "api", "io", "custom", "essay"],
      "description": "The grading template to use"
    },
    "student_name": {
      "type": "string",
      "minLength": 1,
      "description": "Name or identifier of the student"
    },
    "student_credentials": {
      "type": "string",
      "description": "Authentication token or credentials"
    },
    "include_feedback": {
      "type": "boolean",
      "description": "Whether to include detailed feedback in the response"
    },
    "feedback_type": {
      "type": "string",
      "enum": ["default", "ai"],
      "default": "default",
      "description": "Type of feedback generation"
    },
    "openai_key": {
      "type": "string",
      "description": "OpenAI API key (required if feedback_type is 'ai')"
    },
    "redis_url": {
      "type": "string",
      "format": "uri",
      "description": "Redis connection URL for caching"
    },
    "redis_token": {
      "type": "string",
      "description": "Redis authentication token"
    }
  },
  "required": [
    "template_preset",
    "student_name",
    "student_credentials",
    "include_feedback"
  ],
  "allOf": [
    {
      "if": {
        "properties": {
          "feedback_type": {"const": "ai"}
        }
      },
      "then": {
        "required": ["openai_key"]
      }
    }
  ],
  "definitions": {
    "criteria_schema": {
      "type": "object",
      "properties": {
        "base": {
          "type": "object",
          "properties": {
            "weight": {
              "type": "number",
              "minimum": 0,
              "maximum": 100
            },
            "subjects": {
              "type": "object",
              "patternProperties": {
                "^[a-zA-Z_][a-zA-Z0-9_]*$": {
                  "type": "object",
                  "properties": {
                    "weight": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 100
                    },
                    "tests": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Test function name"
                          },
                          "file": {
                            "type": "string",
                            "description": "Target file for the test"
                          },
                          "calls": {
                            "type": "array",
                            "items": {
                              "type": "array",
                              "description": "Array of parameters for each test call"
                            }
                          }
                        },
                        "required": ["name", "calls"]
                      }
                    }
                  },
                  "required": ["weight", "tests"]
                }
              }
            }
          },
          "required": ["weight", "subjects"]
        }
      },
      "required": ["base"]
    },
    "feedback_schema": {
      "type": "object",
      "properties": {
        "general": {
          "type": "object",
          "properties": {
            "report_title": {
              "type": "string",
              "description": "Title for the feedback report"
            },
            "show_passed_tests": {
              "type": "boolean",
              "description": "Whether to show passed tests in the report"
            },
            "show_test_details": {
              "type": "boolean",
              "description": "Whether to show detailed test information"
            }
          }
        },
        "default": {
          "type": "object",
          "properties": {
            "category_headers": {
              "type": "object",
              "patternProperties": {
                "^[a-zA-Z_][a-zA-Z0-9_]*$": {
                  "type": "string",
                  "description": "Custom header for a category"
                }
              }
            }
          }
        }
      }
    },
    "setup_schema": {
      "type": "object",
      "properties": {
        "runtime_image": {
          "type": "string",
          "description": "Docker image to use for execution",
          "examples": ["node:18-alpine", "python:3.11-slim"]
        },
        "container_port": {
          "type": "integer",
          "minimum": 1,
          "maximum": 65535,
          "description": "Port number inside the container"
        },
        "start_command": {
          "type": "string",
          "description": "Command to start the application",
          "examples": ["node server.js", "python app.py"]
        },
        "commands": {
          "type": "object",
          "properties": {
            "install_dependencies": {
              "type": "string",
              "description": "Command to install dependencies",
              "examples": ["npm install", "pip install -r requirements.txt"]
            }
          }
        }
      },
      "required": ["runtime_image", "start_command"]
    },
    "response_schema": {
      "type": "object",
      "properties": {
        "server_status": {
          "type": "string",
          "description": "Status of the server connection"
        },
        "autograding_status": {
          "type": "string",
          "enum": ["completed", "failed", "partial"],
          "description": "Overall status of the autograding process"
        },
        "final_score": {
          "type": "number",
          "minimum": 0,
          "maximum": 100,
          "description": "Final calculated score"
        },
        "feedback": {
          "type": "string",
          "description": "Generated feedback text"
        },
        "test_report": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Test function name"
              },
              "score": {
                "type": "number",
                "minimum": 0,
                "maximum": 100,
                "description": "Score for this test"
              },
              "report": {
                "type": "string",
                "description": "Detailed test report"
              },
              "parameters": {
                "type": "object",
                "description": "Parameters used for the test"
              }
            },
            "required": ["name", "score", "report"]
          }
        }
      },
      "required": ["server_status", "autograding_status", "final_score", "test_report"]
    }
  },
  "examples": [
    {
      "template_preset": "web dev",
      "student_name": "John Doe",
      "student_credentials": "token-123",
      "include_feedback": true,
      "feedback_type": "default"
    },
    {
      "template_preset": "api",
      "student_name": "Jane Smith",
      "student_credentials": "token-456",
      "include_feedback": true,
      "feedback_type": "default"
    },
    {
      "template_preset": "custom",
      "student_name": "Alice Williams",
      "student_credentials": "token-789",
      "include_feedback": true,
      "feedback_type": "ai",
      "openai_key": "sk-..."
    }
  ]
}
